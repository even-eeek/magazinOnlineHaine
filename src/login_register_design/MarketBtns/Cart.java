package login_register_design.MarketBtns;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import login_register_design.Transaction;
import login_register_design.Recipe;
import login_register_design.Item;
import login_register_design.Menu_Form2;

/**
 *
 * @author Void
 */
public class Cart extends javax.swing.JFrame {


    /**
     * Creates new form ProductInformation
     */
    
    private static Cart cartInstance;
    private String UserID;
    private Transaction transaction = Transaction.getInstance(UserID);
    private Map<Item, Boolean> IC_LIST;

    public Map<Item, Boolean> getIC_LIST() {
        return IC_LIST;
    }

    public void setIC_LIST(Map<Item, Boolean> IC_LIST) {
        this.IC_LIST = IC_LIST;
    }
    
    public Cart() {
        
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    
        this.UserID = null;
        IC_LIST = new HashMap<Item, Boolean>();
        setResizable(false);
            }
    
    public Cart(Cart newCart) {
        cartInstance = newCart;
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        
        cartInstance.IC_LIST = new HashMap<Item, Boolean>();
    }

    public Cart(String UserID) {
        
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        
        this.UserID = UserID;
        IC_LIST = new HashMap<Item, Boolean>();
            }
    
    public Cart(String UserID, Transaction newTransaction, Map<Item, Boolean> ItemMap) {
        
        transaction = newTransaction;
        IC_LIST = ItemMap;
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        
        this.UserID = UserID;
    }
    
    @Override
    public String toString() {
        return "Cart{" + "UserID=" + UserID + ", transaction=" + transaction.toString() + ", jLabelTotalCost=" + jLabelTotalCost + '}';
    }
    
    
    public static void RemoveItem(String ItemID){
        if (ItemID == null)
            return;
        
        Item item = Item.getInfoByItemID(ItemID);
        cartInstance.IC_LIST.remove(item);
    }
    
    public static Cart getInstance(String UserID){
        if (cartInstance == null){ //if there is no instance available... create new one
            cartInstance = new Cart(UserID);
        } 

        return cartInstance;
    }
    
    public static Cart getInstance(String UserID, Transaction newTransaction, HashMap<Item, Boolean> ItemMap){
        if (cartInstance == null){ //if there is no instance available... create new one
            cartInstance = new Cart(UserID, newTransaction, ItemMap);
        } 

        return cartInstance;
    }
    
    public static Cart getInstance(){
        if (cartInstance == null){ //if there is no instance available... create new one
            cartInstance = new Cart();
        } 

        return cartInstance;
    }
    
    
    public static void setInstanceNull(){
        cartInstance.IC_LIST.clear();
        cartInstance.transaction = null;
        cartInstance = null;
    }
    
    public String getUserID() {
        return UserID;
    }

    public void setUserID(String UserID) {
        this.UserID = UserID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonDeleteItems = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCart = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabelTotalCost = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jButtonFinalizeTranzaction = new javax.swing.JButton();
        jButtonTransactionHistory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(71, 120, 197));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 72));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cart");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(608, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1032, 1032, 1032))
        );

        jButtonDeleteItems.setText("Remove Selected Item");
        jButtonDeleteItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDeleteItemsMouseClicked(evt);
            }
        });
        jButtonDeleteItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteItemsActionPerformed(evt);
            }
        });

        jTableCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Model", "Brand", "Price", "Dimension", "Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Byte.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableCart.setRowHeight(50);
        jScrollPane1.setViewportView(jTableCart);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Total Cost:");

        jLabelTotalCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButtonCancel.setText("Cancel");
        jButtonCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseClicked(evt);
            }
        });

        jButtonFinalizeTranzaction.setText("Finalize");
        jButtonFinalizeTranzaction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFinalizeTranzactionMouseClicked(evt);
            }
        });
        jButtonFinalizeTranzaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizeTranzactionActionPerformed(evt);
            }
        });

        jButtonTransactionHistory.setText("Get Transaction History");
        jButtonTransactionHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTransactionHistoryMouseClicked(evt);
            }
        });
        jButtonTransactionHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTransactionHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCancel)
                .addGap(47, 47, 47)
                .addComponent(jButtonFinalizeTranzaction)
                .addGap(47, 47, 47))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(14, 14, 14)
                        .addComponent(jLabelTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(554, 554, 554)
                        .addComponent(jButtonTransactionHistory)
                        .addGap(89, 89, 89)
                        .addComponent(jButtonDeleteItems))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1072, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2)
                        .addComponent(jLabelTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonDeleteItems, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonTransactionHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonFinalizeTranzaction))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked
    
    public static ArrayList<ProductList> cartItem = new ArrayList();
    
    private void jButtonDeleteItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteItemsActionPerformed
    }//GEN-LAST:event_jButtonDeleteItemsActionPerformed

        
    
    private void jButtonDeleteItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeleteItemsMouseClicked
        if(Transaction.getInstance(UserID).getItem().size() == 0){
            Item.RemoveItemsFromCurrnetTransaction();
            return;
        }
        
        int column = 0;
        int row = jTableCart.getSelectedRow();
        String itemName = jTableCart.getModel().getValueAt(row, column).toString();
        
        Item newItem = Item.getInfoByItemName(itemName);
        String itemID = newItem.getId();
        Item.setTransactionID(itemID, "0");
        transaction.removeItemFromTransaction(itemID);
        
        RemoveItem(itemID);
        
        cartInstance.dispose();
        setInstanceNull();
        
        //New cart with the new Transaction
//        new Cart(newCart).PrepareCartItems();
        
        Cart.getInstance(UserID).PrepareCartItems(); //after try a new function similiar to prepare but with dispose inside
        
        
        getInstance(this.getUserID()).PrepareCartItems();
    }//GEN-LAST:event_jButtonDeleteItemsMouseClicked

    private void jButtonCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseClicked
        cartInstance.dispose();
    }//GEN-LAST:event_jButtonCancelMouseClicked

    private void jButtonFinalizeTranzactionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFinalizeTranzactionMouseClicked
        
        String LocalUserID = Menu_Form2.getUserID();
        
        if(getInstance(LocalUserID) == null){
            JOptionPane.showMessageDialog(null, "NO TRANSACTION Initiated. Please First ADD ITEM","No TRANSACTION",2);
            cartInstance.dispose();
            return;
        }
        
        if(getInstance().IC_LIST.entrySet().size() == 0){
            JOptionPane.showMessageDialog(null, "NO ITEM ADDED. Please First ADD ITEM","No TRANSACTION",2);
            cartInstance.dispose();
            return;
        }
        
        getInstance().setUserID(LocalUserID);
        
        
        transaction = Transaction.getInstance(UserID);
        transaction.FinalizeTransaction(UserID);
        transaction.updateItemsTransactionID();
        Recipe newRecipe = new Recipe(transaction);
        newRecipe.FinalizeRecipe();
        
        
        cartInstance.dispose();
        
        Transaction.setInstanceNull();
        Cart.setInstanceNull();
    }//GEN-LAST:event_jButtonFinalizeTranzactionMouseClicked

    
    private void jButtonFinalizeTranzactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizeTranzactionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonFinalizeTranzactionActionPerformed

    private void jButtonTransactionHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTransactionHistoryMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonTransactionHistoryMouseClicked

    private void jButtonTransactionHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTransactionHistoryActionPerformed
        // TODO add your handling code here:
        
        for (String RecipeID : Recipe.getUserRecipeHistory(Menu_Form2.getUserID())) {
            Recipe newRecipe = Recipe.getRecipeInfoByID(RecipeID);
            
            System.out.print("----------------------------------");
            System.out.print("----------------------------------");
            System.out.print("-");
            System.out.print("-");
            System.out.print("-");
            System.out.print(newRecipe.toString());
            System.out.print("-");
            System.out.print("-");
            System.out.print("-");
            System.out.print("----------------------------------");
            System.out.print("----------------------------------");
            
            JOptionPane.showMessageDialog(null, newRecipe.toString());
        } 
    }//GEN-LAST:event_jButtonTransactionHistoryActionPerformed

     public void InsertComponentsInList() {
        
        transaction = Transaction.getInstance(UserID);
        
        for (String ItemID : transaction.getItem()) {
            Item item = Item.getInfoByItemID(ItemID);
            
            IC_LIST.put(item, false);
        }
        
    }
     
     public void PrepareCartItems() {
        InsertComponentsInList();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jLabelTotalCost.setText(transaction.getTotalCost());
        this.jTableCart.setModel(makeTableModel());
        
        pack();
        setVisible(true);
     }

    private TableModel makeTableModel()
    {
        DefaultTableModel tableModel = new DefaultTableModel (
               new Object[] { "Model", "Brand", "Price", "Dimension", "Image" }, 0
        );
         
        for (Map.Entry<Item, Boolean> entry : this.IC_LIST.entrySet()) {
            if (!entry.getValue()){

                Item item = entry.getKey();
                String modelName = item.getItemName();
                String owner = item.getOwner();
                String price = item.getPrice();
                String dimension = item.getDimension();
                byte [] img = item.getImage();
                tableModel.addRow(new Object[] { modelName, owner, price, dimension, img });

                entry.setValue(true);
            }
        }
        return tableModel;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDeleteItems;
    private javax.swing.JButton jButtonFinalizeTranzaction;
    private javax.swing.JButton jButtonTransactionHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTotalCost;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTableCart;
    // End of variables declaration//GEN-END:variables

    public static JTable getjTableCart() {
        return jTableCart;
    }

    public static void setjTableCart(JTable jTableCart) {
        Cart.jTableCart = jTableCart;
    }
}
